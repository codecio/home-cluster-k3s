---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 8.3.5
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: grafana/grafana
      tag: 9.0.0

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          hajimari.io/appName: "grafana"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi-greenhouse"
        tls:
          - hosts:
              - "grafana.${SECRET_DOMAIN}"
            secretName: "grafana-tls"
        rules:
          - host: "grafana.${SECRET_DOMAIN}"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: grafana
                      port:
                        number: 3000

    rbac:
      create: true
      pspEnabled: true
      pspUseAppArmor: true
      namespaced: false
      extraRoleRules: []
      extraClusterRoleRules: []
    serviceAccount:
      create: true
      name:
      nameTest:
      autoMount: true

    replicas: 1

    headlessService: false

    autoscaling:
      enabled: false
    podDisruptionBudget: {}
    deploymentStrategy:
      type: RollingUpdate

    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000

    livenessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 60
      timeoutSeconds: 30
      failureThreshold: 10

    testFramework:
      enabled: true
      image: "bats/bats"
      tag: "v1.4.1"
      imagePullPolicy: IfNotPresent
      securityContext: {}

    securityContext:
      runAsUser: 472
      runAsGroup: 472
      fsGroup: 472

    containerSecurityContext:
      {}

    extraConfigmapMounts: []

    extraEmptyDirMounts: []

    extraLabels: {}

    downloadDashboardsImage:
      repository: curlimages/curl
      tag: 7.73.0
      sha: ""
      pullPolicy: IfNotPresent

    downloadDashboards:
      env: {}
      envFromSecret: ""
      resources: {}

    podPortName: grafana

    ## Deployment annotations
    # annotations: {}


    serviceMonitor:
      ## If true, a ServiceMonitor CRD is created for a prometheus operator
      ## https://github.com/coreos/prometheus-operator
      ##
      enabled: false
      path: /metrics
      #  namespace: monitoring  (defaults to use the namespace this chart is deployed to)
      labels: {}
      interval: 1m
      scheme: http
      tlsConfig: {}
      scrapeTimeout: 30s
      relabelings: []

    extraExposePorts: []
    hostAliases: []

    resources: {}
    #  limits:
    #    cpu: 100m
    #    memory: 128Mi
    #  requests:
    #    cpu: 100m
    #    memory: 128Mi

    ## Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    #
    nodeSelector: {}

    ## Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

    ## Affinity for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}

    extraInitContainers: []

    ## Enable an Specify container in extraContainers. This is meant to allow adding an authentication proxy to a grafana pod
    extraContainers: ""
    # extraContainers: |
    # - name: proxy
    #   image: quay.io/gambol99/keycloak-proxy:latest
    #   args:
    #   - -provider=github
    #   - -client-id=
    #   - -client-secret=
    #   - -github-org=<ORG_NAME>
    #   - -email-domain=*
    #   - -cookie-secret=
    #   - -http-address=http://0.0.0.0:4181
    #   - -upstream-url=http://127.0.0.1:3000
    #   ports:
    #     - name: proxy-web
    #       containerPort: 4181

    ## Volumes that can be used in init containers that will not be mounted to deployment pods
    extraContainerVolumes: []
    #  - name: volume-from-secret
    #    secret:
    #      secretName: secret-to-mount
    #  - name: empty-dir-volume
    #    emptyDir: {}

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      type: pvc
      enabled: false
      # storageClassName: default
      accessModes:
        - ReadWriteOnce
      size: 128Mi
      # annotations: {}
      finalizers:
        - kubernetes.io/pvc-protection
      # selectorLabels: {}
      # subPath: ""
      # existingClaim:

      ## If persistence is not enabled, this allows to mount the
      ## local storage in-memory to improve performance
      ##
      inMemory:
        enabled: false
        ## The maximum usage on memory medium EmptyDir would be
        ## the minimum value between the SizeLimit specified
        ## here and the sum of memory limits of all containers in a pod
        ##
        # sizeLimit: 300Mi

    initChownData:
      ## If false, data ownership will not be reset at startup
      ## This allows the prometheus-server to be run with an arbitrary user
      ##
      enabled: true

      ## initChownData container image
      ##
      image:
        repository: busybox
        tag: "1.31.1"
        sha: ""
        pullPolicy: IfNotPresent

      resources: {}
    adminUser: admin
    admin:
      existingSecret: ""
      userKey: admin-user
      passwordKey: admin-password

    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_PUBLIC_DOMAIN}"
      paths:
        data: /var/lib/grafana/
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: true
      log:
        mode: console
      grafana_net:
        url: https://grafana.net

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
